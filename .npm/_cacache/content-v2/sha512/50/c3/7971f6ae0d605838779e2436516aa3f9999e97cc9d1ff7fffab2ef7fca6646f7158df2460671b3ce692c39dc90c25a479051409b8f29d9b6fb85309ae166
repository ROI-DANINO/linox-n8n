{"_id":"@sentry-internal/node-native-stacktrace","_rev":"5-57fa78b8b94e144c937a16be8cfbf265","name":"@sentry-internal/node-native-stacktrace","dist-tags":{"latest":"0.2.2"},"versions":{"0.1.0":{"name":"@sentry-internal/node-native-stacktrace","version":"0.1.0","license":"MIT","_id":"@sentry-internal/node-native-stacktrace@0.1.0","maintainers":[{"name":"haza","email":"daniel.griesser.86@gmail.com"},{"name":"sentry-bot","email":"accounts@sentry.io"},{"name":"mitsuhiko","email":"armin.ronacher@active-4.com"},{"name":"zeeg","email":"dcramer@gmail.com"},{"name":"leedongwei","email":"danny@dongwei.li"},{"name":"evanpurkhiser","email":"evanpurkhiser@gmail.com"},{"name":"billyvg","email":"npm@mmo.me"},{"name":"jauer","email":"account@jauer.org"},{"name":"markstory","email":"mark@mark-story.com"}],"dist":{"shasum":"fa0eaf1e66245f463ca2294ff63da74c56d1a052","tarball":"https://registry.npmjs.org/@sentry-internal/node-native-stacktrace/-/node-native-stacktrace-0.1.0.tgz","fileCount":39,"integrity":"sha512-dWkxhDdjcRdEOTk1acrdBledqIroaYJrOSbecx5tJ/m9DiWZ1Oa4eNi/sI2SHLT+hKmsBBxrychf6+Iitz5Bzw==","signatures":[{"sig":"MEYCIQC9G7VKGHkw0/zWtAOfqkSYTOcVudYgVMFrDraZsjh14gIhAOaf0uEjo0I5Nu5lqldzmF2uyzCr62Syg1Ugvp4omjx7","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"unpackedSize":2464857},"main":"lib/index.js","_from":"file:/tmp/craft-HRTLB3/sentry-internal-node-native-stacktrace-0.1.0.tgz","types":"lib/index.d.ts","volta":{"node":"24.1.0"},"scripts":{"fix":"yarn fix:eslint && yarn fix:clang","lint":"yarn lint:eslint && yarn lint:clang","test":"node ./test/prepare.mjs && vitest run --silent=false --disable-console-intercept","build":"yarn build:lib && yarn build:bindings:configure && yarn build:bindings","clean":"node-gyp clean && rm -rf lib && rm -rf build","install":"node scripts/check-build.mjs","build:dev":"yarn clean && yarn build:bindings:configure && yarn build","build:lib":"tsc","fix:clang":"node scripts/clang-format.mjs --fix","fix:eslint":"eslint . --format stylish --fix","lint:clang":"node scripts/clang-format.mjs","lint:eslint":"eslint . --format stylish","build:tarball":"npm pack","build:bindings":"node-gyp build && node scripts/copy-target.mjs","build:bindings:arm64":"node-gyp build --arch=arm64 && node scripts/copy-target.mjs","build:bindings:configure":"node-gyp configure","build:bindings:configure:arm64":"node-gyp configure --arch=arm64 --target_arch=arm64"},"_npmUser":{"name":"sentry-bot","email":"accounts@sentry.io"},"_resolved":"/tmp/craft-HRTLB3/sentry-internal-node-native-stacktrace-0.1.0.tgz","_integrity":"sha512-dWkxhDdjcRdEOTk1acrdBledqIroaYJrOSbecx5tJ/m9DiWZ1Oa4eNi/sI2SHLT+hKmsBBxrychf6+Iitz5Bzw==","_npmVersion":"10.9.2","description":"Native Node module to capture stack traces from all registered threads.","directories":{},"_nodeVersion":"22.16.0","dependencies":{"node-abi":"^3.73.0","detect-libc":"^2.0.4"},"publishConfig":{"access":"public"},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^7.0.0","vitest":"^3.1.4","node-gyp":"^11.2.0","typescript":"^5.8.3","@types/node":"^18.19.1","clang-format":"^1.8.0","@types/node-abi":"^3.0.3","@sentry-internal/eslint-config-sdk":"^9.22.0"},"_npmOperationalInternal":{"tmp":"tmp/node-native-stacktrace_0.1.0_1749824383252_0.6839148903427714","host":"s3://npm-registry-packages-npm-production"}},"0.1.1":{"name":"@sentry-internal/node-native-stacktrace","version":"0.1.1","keywords":["stacktrace","native","nodejs","worker","sentry"],"author":{"name":"Sentry"},"license":"MIT","_id":"@sentry-internal/node-native-stacktrace@0.1.1","maintainers":[{"name":"haza","email":"daniel.griesser.86@gmail.com"},{"name":"sentry-bot","email":"accounts@sentry.io"},{"name":"mitsuhiko","email":"armin.ronacher@active-4.com"},{"name":"zeeg","email":"dcramer@gmail.com"},{"name":"leedongwei","email":"danny@dongwei.li"},{"name":"evanpurkhiser","email":"evanpurkhiser@gmail.com"},{"name":"billyvg","email":"npm@mmo.me"},{"name":"jauer","email":"account@jauer.org"},{"name":"markstory","email":"mark@mark-story.com"}],"homepage":"https://github.com/getsentry/sentry-javascript-node-native-stacktrace","bugs":{"url":"https://github.com/getsentry/sentry-javascript-node-native-stacktrace/issues"},"dist":{"shasum":"713b16a1c57c420b5c51cfeb239612c627eeacfb","tarball":"https://registry.npmjs.org/@sentry-internal/node-native-stacktrace/-/node-native-stacktrace-0.1.1.tgz","fileCount":40,"integrity":"sha512-B5TSNsFx6AxBNzZ4I6fpZAoR0Z8jThN/q9T7OVLC6x/4naINTRDA+8/hN/ptzUhXdXJgLoUn7Y+8N71unPJG6g==","signatures":[{"sig":"MEUCIH1ZyZ46QnMU6WoLss9Rqvow2aBXLekddR673grIjUQHAiEAxtRRhHvqyCGkpo9CVMq7NEZWTTylBi+ye8Q9sLy3neg=","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"unpackedSize":2468231},"main":"lib/index.js","_from":"file:/tmp/craft-G56SoI/sentry-internal-node-native-stacktrace-0.1.1.tgz","types":"lib/index.d.ts","volta":{"node":"24.1.0"},"engines":{"node":">=18"},"scripts":{"fix":"yarn fix:eslint && yarn fix:clang","lint":"yarn lint:eslint && yarn lint:clang","test":"node ./test/prepare.mjs && vitest run --silent=false --disable-console-intercept","build":"yarn build:lib && yarn build:bindings:configure && yarn build:bindings","clean":"node-gyp clean && rm -rf lib && rm -rf build","install":"node scripts/check-build.mjs","build:dev":"yarn clean && yarn build:bindings:configure && yarn build","build:lib":"tsc","fix:clang":"node scripts/clang-format.mjs --fix","fix:eslint":"eslint . --format stylish --fix","lint:clang":"node scripts/clang-format.mjs","lint:eslint":"eslint . --format stylish","build:tarball":"npm pack","build:bindings":"node-gyp build && node scripts/copy-target.mjs","build:bindings:arm64":"node-gyp build --arch=arm64 && node scripts/copy-target.mjs","build:bindings:configure":"node-gyp configure","build:bindings:configure:arm64":"node-gyp configure --arch=arm64 --target_arch=arm64"},"_npmUser":{"name":"sentry-bot","actor":{"name":"sentry-bot","type":"user","email":"accounts@sentry.io"},"email":"accounts@sentry.io"},"_resolved":"/tmp/craft-G56SoI/sentry-internal-node-native-stacktrace-0.1.1.tgz","_integrity":"sha512-B5TSNsFx6AxBNzZ4I6fpZAoR0Z8jThN/q9T7OVLC6x/4naINTRDA+8/hN/ptzUhXdXJgLoUn7Y+8N71unPJG6g==","repository":{"url":"git://github.com/getsentry/sentry-javascript-node-native-stacktrace.git","type":"git"},"_npmVersion":"10.9.2","description":"A native Node.js module that can capture JavaScript stack traces from main and worker threads, even with blocked event loops.","directories":{},"_nodeVersion":"22.16.0","dependencies":{"node-abi":"^3.73.0","detect-libc":"^2.0.4"},"publishConfig":{"access":"public"},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^7.0.0","vitest":"^3.1.4","node-gyp":"^11.2.0","typescript":"^5.8.3","@types/node":"^18.19.1","clang-format":"^1.8.0","@types/node-abi":"^3.0.3","@sentry-internal/eslint-config-sdk":"^9.22.0"},"_npmOperationalInternal":{"tmp":"tmp/node-native-stacktrace_0.1.1_1750917070826_0.5763488884638477","host":"s3://npm-registry-packages-npm-production"}},"0.2.0":{"name":"@sentry-internal/node-native-stacktrace","version":"0.2.0","keywords":["stacktrace","native","nodejs","worker","sentry"],"author":{"name":"Sentry"},"license":"MIT","_id":"@sentry-internal/node-native-stacktrace@0.2.0","maintainers":[{"name":"haza","email":"daniel.griesser.86@gmail.com"},{"name":"sentry-bot","email":"accounts@sentry.io"},{"name":"mitsuhiko","email":"armin.ronacher@active-4.com"},{"name":"zeeg","email":"dcramer@gmail.com"},{"name":"leedongwei","email":"danny@dongwei.li"},{"name":"evanpurkhiser","email":"evanpurkhiser@gmail.com"},{"name":"billyvg","email":"npm@mmo.me"},{"name":"jauer","email":"account@jauer.org"},{"name":"markstory","email":"mark@mark-story.com"}],"homepage":"https://github.com/getsentry/sentry-javascript-node-native-stacktrace","bugs":{"url":"https://github.com/getsentry/sentry-javascript-node-native-stacktrace/issues"},"dist":{"shasum":"d759d9ba62101aea46829c436aec490d4a63f9f7","tarball":"https://registry.npmjs.org/@sentry-internal/node-native-stacktrace/-/node-native-stacktrace-0.2.0.tgz","fileCount":40,"integrity":"sha512-MPkjcXFUaBVxbpx8whvqQu7UncriCt3nUN7uA+ojgauHF2acvSp5nJCqKM2a4KInFWNiI1AxJ6tLE7EuBJ4WBQ==","signatures":[{"sig":"MEUCIQDCpn2H+hW3NtrgeGWpjB7dHV+RmwIwVP+LW8omEiQLKAIgbUgxOJtYlJTaT3iFNzGJZEIMWltCW489QSoFswCB2Xk=","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"unpackedSize":2482096},"main":"lib/index.js","_from":"file:/tmp/craft-8WTQFR/sentry-internal-node-native-stacktrace-0.2.0.tgz","types":"lib/index.d.ts","volta":{"node":"24.1.0"},"engines":{"node":">=18"},"scripts":{"fix":"yarn fix:eslint && yarn fix:clang","lint":"yarn lint:eslint && yarn lint:clang","test":"node ./test/prepare.mjs && vitest run --silent=false --disable-console-intercept","build":"yarn build:lib && yarn build:bindings:configure && yarn build:bindings","clean":"node-gyp clean && rm -rf lib && rm -rf build","install":"node scripts/check-build.mjs","build:dev":"yarn clean && yarn build:bindings:configure && yarn build","build:lib":"tsc","fix:clang":"node scripts/clang-format.mjs --fix","fix:eslint":"eslint . --format stylish --fix","lint:clang":"node scripts/clang-format.mjs","lint:eslint":"eslint . --format stylish","build:tarball":"npm pack","build:bindings":"node-gyp build && node scripts/copy-target.mjs","build:bindings:arm64":"node-gyp build --arch=arm64 && node scripts/copy-target.mjs","build:bindings:configure":"node-gyp configure","build:bindings:configure:arm64":"node-gyp configure --arch=arm64 --target_arch=arm64"},"_npmUser":{"name":"sentry-bot","actor":{"name":"sentry-bot","type":"user","email":"accounts@sentry.io"},"email":"accounts@sentry.io"},"_resolved":"/tmp/craft-8WTQFR/sentry-internal-node-native-stacktrace-0.2.0.tgz","_integrity":"sha512-MPkjcXFUaBVxbpx8whvqQu7UncriCt3nUN7uA+ojgauHF2acvSp5nJCqKM2a4KInFWNiI1AxJ6tLE7EuBJ4WBQ==","repository":{"url":"git://github.com/getsentry/sentry-javascript-node-native-stacktrace.git","type":"git"},"_npmVersion":"10.9.2","description":"A native Node.js module that can capture JavaScript stack traces from main and worker threads, even with blocked event loops.","directories":{},"_nodeVersion":"22.17.0","dependencies":{"node-abi":"^3.73.0","detect-libc":"^2.0.4"},"publishConfig":{"access":"public"},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^7.0.0","vitest":"^3.1.4","node-gyp":"^11.2.0","typescript":"^5.8.3","@types/node":"^18.19.1","clang-format":"^1.8.0","@types/node-abi":"^3.0.3","@sentry-internal/eslint-config-sdk":"^9.22.0"},"_npmOperationalInternal":{"tmp":"tmp/node-native-stacktrace_0.2.0_1752180741844_0.357532656251482","host":"s3://npm-registry-packages-npm-production"}},"0.2.1":{"name":"@sentry-internal/node-native-stacktrace","version":"0.2.1","keywords":["stacktrace","native","nodejs","worker","sentry"],"author":{"name":"Sentry"},"license":"MIT","_id":"@sentry-internal/node-native-stacktrace@0.2.1","maintainers":[{"name":"haza","email":"daniel.griesser.86@gmail.com"},{"name":"sentry-bot","email":"accounts@sentry.io"},{"name":"mitsuhiko","email":"armin.ronacher@active-4.com"},{"name":"zeeg","email":"dcramer@gmail.com"},{"name":"leedongwei","email":"danny@dongwei.li"},{"name":"evanpurkhiser","email":"evanpurkhiser@gmail.com"},{"name":"billyvg","email":"npm@mmo.me"},{"name":"jauer","email":"account@jauer.org"},{"name":"markstory","email":"mark@mark-story.com"}],"homepage":"https://github.com/getsentry/sentry-javascript-node-native-stacktrace","bugs":{"url":"https://github.com/getsentry/sentry-javascript-node-native-stacktrace/issues"},"dist":{"shasum":"021c30b396f4cfa47a7f13467049f4d0673e4b1b","tarball":"https://registry.npmjs.org/@sentry-internal/node-native-stacktrace/-/node-native-stacktrace-0.2.1.tgz","fileCount":40,"integrity":"sha512-sIfIj0LFL8WKxifRB6xtD2u4a1imeTNywk5PrXXqZnYLXgR7mr1vb9oGNxh8YJNCwsmr1EtitCm5IjgXWJtQ2Q==","signatures":[{"sig":"MEYCIQD+pytH7yIinU5JPu+D7wir+h2VhJtRT2VnBUL61CWfSQIhAPrIWt2pHbRTKMiIYPCJDvjON0ksZ3UMODBjS8b/T8P3","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"unpackedSize":2482113},"main":"lib/index.js","_from":"file:/tmp/craft-ZyAwCP/sentry-internal-node-native-stacktrace-0.2.1.tgz","types":"lib/index.d.ts","volta":{"node":"24.1.0"},"engines":{"node":">=18"},"scripts":{"fix":"yarn fix:eslint && yarn fix:clang","lint":"yarn lint:eslint && yarn lint:clang","test":"node ./test/prepare.mjs && vitest run --silent=false --disable-console-intercept","build":"yarn build:lib && yarn build:bindings:configure && yarn build:bindings","clean":"node-gyp clean && rm -rf lib && rm -rf build","install":"node scripts/check-build.mjs","build:dev":"yarn clean && yarn build:bindings:configure && yarn build","build:lib":"tsc","fix:clang":"node scripts/clang-format.mjs --fix","fix:eslint":"eslint . --format stylish --fix","lint:clang":"node scripts/clang-format.mjs","lint:eslint":"eslint . --format stylish","build:tarball":"npm pack","build:bindings":"node-gyp build && node scripts/copy-target.mjs","build:bindings:arm64":"node-gyp build --arch=arm64 && node scripts/copy-target.mjs","build:bindings:configure":"node-gyp configure","build:bindings:configure:arm64":"node-gyp configure --arch=arm64 --target_arch=arm64"},"_npmUser":{"name":"sentry-bot","email":"accounts@sentry.io"},"_resolved":"/tmp/craft-ZyAwCP/sentry-internal-node-native-stacktrace-0.2.1.tgz","_integrity":"sha512-sIfIj0LFL8WKxifRB6xtD2u4a1imeTNywk5PrXXqZnYLXgR7mr1vb9oGNxh8YJNCwsmr1EtitCm5IjgXWJtQ2Q==","repository":{"url":"git://github.com/getsentry/sentry-javascript-node-native-stacktrace.git","type":"git"},"_npmVersion":"10.9.2","description":"A native Node.js module that can capture JavaScript stack traces from main and worker threads, even with blocked event loops.","directories":{},"_nodeVersion":"22.17.0","dependencies":{"node-abi":"^3.73.0","detect-libc":"^2.0.4"},"publishConfig":{"access":"public"},"_hasShrinkwrap":false,"devDependencies":{"eslint":"^7.0.0","vitest":"^3.1.4","node-gyp":"^11.2.0","typescript":"^5.8.3","@types/node":"^18.19.1","clang-format":"^1.8.0","@types/node-abi":"^3.0.3","@sentry-internal/eslint-config-sdk":"^9.22.0"},"_npmOperationalInternal":{"tmp":"tmp/node-native-stacktrace_0.2.1_1752705883513_0.19804211321675735","host":"s3://npm-registry-packages-npm-production"}},"0.2.2":{"name":"@sentry-internal/node-native-stacktrace","version":"0.2.2","main":"lib/index.js","types":"lib/index.d.ts","repository":{"type":"git","url":"git://github.com/getsentry/sentry-javascript-node-native-stacktrace.git"},"homepage":"https://github.com/getsentry/sentry-javascript-node-native-stacktrace","author":{"name":"Sentry"},"license":"MIT","description":"A native Node.js module that can capture JavaScript stack traces from main and worker threads, even with blocked event loops.","keywords":["stacktrace","native","nodejs","worker","sentry"],"scripts":{"install":"node scripts/check-build.mjs","lint":"yarn lint:eslint && yarn lint:clang","lint:eslint":"eslint . --format stylish","lint:clang":"node scripts/clang-format.mjs","fix":"yarn fix:eslint && yarn fix:clang","fix:eslint":"eslint . --format stylish --fix","fix:clang":"node scripts/clang-format.mjs --fix","build":"yarn build:lib && yarn build:bindings:configure && yarn build:bindings","build:lib":"tsc","build:bindings:configure":"node-gyp configure","build:bindings:configure:arm64":"node-gyp configure --arch=arm64 --target_arch=arm64","build:bindings":"node-gyp build && node scripts/copy-target.mjs","build:bindings:arm64":"node-gyp build --arch=arm64 && node scripts/copy-target.mjs","build:dev":"yarn clean && yarn build:bindings:configure && yarn build","build:tarball":"npm pack","clean":"node-gyp clean && rm -rf lib && rm -rf build","test":"node ./test/prepare.mjs && vitest run --silent=false --disable-console-intercept"},"engines":{"node":">=18"},"dependencies":{"detect-libc":"^2.0.4","node-abi":"^3.73.0"},"devDependencies":{"@sentry-internal/eslint-config-sdk":"^9.22.0","@types/node":"^18.19.1","@types/node-abi":"^3.0.3","clang-format":"^1.8.0","eslint":"^7.0.0","node-gyp":"^11.2.0","typescript":"^5.8.3","vitest":"^3.1.4"},"publishConfig":{"access":"public"},"volta":{"node":"24.1.0"},"_id":"@sentry-internal/node-native-stacktrace@0.2.2","bugs":{"url":"https://github.com/getsentry/sentry-javascript-node-native-stacktrace/issues"},"_integrity":"sha512-ZRS+a1Ik+w6awjp9na5vHBqLNkIxysfGDswLVAkjtVdBUxtfsEVI8OA6r8PijJC5Gm1oAJJap2e9H7TSiCUQIQ==","_resolved":"/tmp/craft-vYEFIi/sentry-internal-node-native-stacktrace-0.2.2.tgz","_from":"file:/tmp/craft-vYEFIi/sentry-internal-node-native-stacktrace-0.2.2.tgz","_nodeVersion":"22.17.1","_npmVersion":"10.9.2","dist":{"integrity":"sha512-ZRS+a1Ik+w6awjp9na5vHBqLNkIxysfGDswLVAkjtVdBUxtfsEVI8OA6r8PijJC5Gm1oAJJap2e9H7TSiCUQIQ==","shasum":"b32dde884642f100dd691b12b643361040825eeb","tarball":"https://registry.npmjs.org/@sentry-internal/node-native-stacktrace/-/node-native-stacktrace-0.2.2.tgz","fileCount":40,"unpackedSize":2488314,"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIQDRz+dN1swSXcK/Wk1n5E5nb/TQ5RI8IpO5MALPMVC/RQIgX0aTT3a81JEhDIgLWtZNeUYHJYps3cO0qsKJqBh8KuQ="}]},"_npmUser":{"name":"sentry-bot","email":"accounts@sentry.io"},"directories":{},"maintainers":[{"name":"haza","email":"daniel.griesser.86@gmail.com"},{"name":"sentry-bot","email":"accounts@sentry.io"},{"name":"mitsuhiko","email":"armin.ronacher@active-4.com"},{"name":"zeeg","email":"dcramer@gmail.com"},{"name":"leedongwei","email":"danny@dongwei.li"},{"name":"evanpurkhiser","email":"evanpurkhiser@gmail.com"},{"name":"billyvg","email":"npm@mmo.me"},{"name":"jauer","email":"account@jauer.org"},{"name":"markstory","email":"mark@mark-story.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/node-native-stacktrace_0.2.2_1753756319335_0.3366999535196289"},"_hasShrinkwrap":false}},"time":{"created":"2025-06-13T14:19:43.158Z","modified":"2025-07-29T02:31:59.898Z","0.1.0":"2025-06-13T14:19:43.550Z","0.1.1":"2025-06-26T05:51:11.109Z","0.2.0":"2025-07-10T20:52:22.117Z","0.2.1":"2025-07-16T22:44:43.710Z","0.2.2":"2025-07-29T02:31:59.592Z"},"bugs":{"url":"https://github.com/getsentry/sentry-javascript-node-native-stacktrace/issues"},"author":{"name":"Sentry"},"license":"MIT","homepage":"https://github.com/getsentry/sentry-javascript-node-native-stacktrace","keywords":["stacktrace","native","nodejs","worker","sentry"],"repository":{"type":"git","url":"git://github.com/getsentry/sentry-javascript-node-native-stacktrace.git"},"description":"A native Node.js module that can capture JavaScript stack traces from main and worker threads, even with blocked event loops.","maintainers":[{"name":"haza","email":"daniel.griesser.86@gmail.com"},{"name":"sentry-bot","email":"accounts@sentry.io"},{"name":"mitsuhiko","email":"armin.ronacher@active-4.com"},{"name":"zeeg","email":"dcramer@gmail.com"},{"name":"leedongwei","email":"danny@dongwei.li"},{"name":"evanpurkhiser","email":"evanpurkhiser@gmail.com"},{"name":"billyvg","email":"npm@mmo.me"},{"name":"jauer","email":"account@jauer.org"},{"name":"markstory","email":"mark@mark-story.com"}],"readme":"# `@sentry-internal/node-native-stacktrace`\n\nA native Node.js module that can capture JavaScript stack traces for registered\nmain or worker threads from any other thread, even if event loops are blocked.\n\nThe module also provides a means to create a watchdog system to track event loop\nblocking via periodic heartbeats. When the time from the last heartbeat crosses\na threshold, JavaScript stack traces can be captured. The heartbeats can\noptionally include state information which is included with the corresponding\nstack trace.\n\nThis native module is used for Sentry's\n[Event Loop Blocked Detection](https://docs.sentry.io/platforms/javascript/guides/nextjs/configuration/event-loop-block/)\nfeature.\n\n## Basic Usage\n\n### 1. Register threads you want to monitor\n\nIn your main thread or worker threads:\n\n```ts\nimport { registerThread } from \"@sentry-internal/node-native-stacktrace\";\n\n// Register this thread for monitoring\nregisterThread();\n```\n\n### 2. Capture stack traces from any thread\n\n```ts\nimport { captureStackTrace } from \"@sentry-internal/node-native-stacktrace\";\n\n// Capture stack traces from all registered threads\nconst stacks = captureStackTrace();\nconsole.log(stacks);\n```\n\n### Example Output\n\nStack traces show where each thread is currently executing:\n\n```js\n{\n  '0': { // Main thread has ID '0'\n    frames: [\n      {\n        function: 'from',\n        filename: 'node:buffer',\n        lineno: 298,\n        colno: 28\n      },\n      {\n        function: 'pbkdf2Sync',\n        filename: 'node:internal/crypto/pbkdf2',\n        lineno: 78,\n        colno: 17\n      },\n      {\n        function: 'longWork',\n        filename: '/app/test.js',\n        lineno: 20,\n        colno: 29\n      },\n      {\n        function: '?',\n        filename: '/app/test.js',\n        lineno: 24,\n        colno: 1\n      }\n    ]\n  },\n  '2': { // Worker thread \n    frames: [\n      {\n        function: 'from',\n        filename: 'node:buffer',\n        lineno: 298,\n        colno: 28\n      },\n      {\n        function: 'pbkdf2Sync',\n        filename: 'node:internal/crypto/pbkdf2',\n        lineno: 78,\n        colno: 17\n      },\n      {\n        function: 'longWork',\n        filename: '/app/worker.js',\n        lineno: 10,\n        colno: 29\n      },\n      {\n        function: '?',\n        filename: '/app/worker.js',\n        lineno: 14,\n        colno: 1\n      }\n    ]\n  }\n}\n```\n\n## Advanced Usage: Automatic blocked event loop Detection\n\nSet up automatic detection of blocked event loops:\n\n### 1. Set up thread heartbeats\n\nSend regular heartbeats with optional state information:\n\n```ts\nimport {\n  registerThread,\n  threadPoll,\n} from \"@sentry-internal/node-native-stacktrace\";\n\n// Register this thread\nregisterThread();\n\n// Send heartbeats every 200ms with optional state\nsetInterval(() => {\n  threadPoll({\n    endpoint: \"/api/current-request\",\n    userId: getCurrentUserId(),\n  });\n}, 200);\n```\n\n### 2. Monitor from a watchdog thread\n\nMonitor all registered threads from a dedicated thread:\n\n```ts\nimport {\n  captureStackTrace,\n  getThreadsLastSeen,\n} from \"@sentry-internal/node-native-stacktrace\";\n\nconst THRESHOLD = 1000; // 1 second\n\nsetInterval(() => {\n  const threadsLastSeen = getThreadsLastSeen();\n\n  for (const [threadId, timeSinceLastSeen] of Object.entries(threadsLastSeen)) {\n    if (timeSinceLastSeen > THRESHOLD) {\n      // Thread appears to be blocked - capture diagnostics\n      const stackTraces = captureStackTrace();\n      const blockedThread = stackTraces[threadId];\n\n      console.error(`🚨 Thread ${threadId} blocked for ${timeSinceLastSeen}ms`);\n      console.error(\"Stack trace:\", blockedThread.frames);\n      console.error(\"Last known state:\", blockedThread.state);\n    }\n  }\n}, 500); // Check every 500ms\n```\n\n## API Reference\n\n### Functions\n\n#### `registerThread(threadName?: string): void`\n\nRegisters the current thread for monitoring. Must be called from each thread you\nwant to capture stack traces from.\n\n- `threadName` (optional): Name for the thread. Defaults to the current thread\n  ID.\n\n#### `captureStackTrace<State>(): Record<string, Thread<State>>`\n\nCaptures stack traces from all registered threads. Can be called from any thread\nbut will not capture the stack trace of the calling thread itself.\n\n```ts\ntype Thread<S> = {\n  frames: StackFrame[];\n  state?: S;\n};\n\ntype StackFrame = {\n  function: string;\n  filename: string;\n  lineno: number;\n  colno: number;\n};\n```\n\n#### `threadPoll<State>(state?: State, disableLastSeen?: boolean): void`\n\nSends a heartbeat from the current thread with optional state information. The\nstate object will be serialized and included as a JavaScript object with the\ncorresponding stack trace.\n\n- `state` (optional): An object containing state information to include with the\n  stack trace.\n- `disableLastSeen` (optional): If `true`, disables the tracking of the last\n  seen time for this thread.\n\n#### `getThreadsLastSeen(): Record<string, number>`\n\nReturns the time in milliseconds since each registered thread called\n`threadPoll()`.\n","readmeFilename":"README.md"}